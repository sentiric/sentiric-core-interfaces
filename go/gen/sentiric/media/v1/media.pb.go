// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0--rc1
// source: sentiric/media/v1/media.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AllocatePortRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CallId        string                 `protobuf:"bytes,1,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"` // Hangi çağrı için port istendiği (izlenebilirlik için)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllocatePortRequest) Reset() {
	*x = AllocatePortRequest{}
	mi := &file_sentiric_media_v1_media_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllocatePortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocatePortRequest) ProtoMessage() {}

func (x *AllocatePortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_media_v1_media_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocatePortRequest.ProtoReflect.Descriptor instead.
func (*AllocatePortRequest) Descriptor() ([]byte, []int) {
	return file_sentiric_media_v1_media_proto_rawDescGZIP(), []int{0}
}

func (x *AllocatePortRequest) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

type AllocatePortResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RtpPort       uint32                 `protobuf:"varint,1,opt,name=rtp_port,json=rtpPort,proto3" json:"rtp_port,omitempty"` // Ayrılan çift sayılı RTP portu
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllocatePortResponse) Reset() {
	*x = AllocatePortResponse{}
	mi := &file_sentiric_media_v1_media_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllocatePortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocatePortResponse) ProtoMessage() {}

func (x *AllocatePortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_media_v1_media_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocatePortResponse.ProtoReflect.Descriptor instead.
func (*AllocatePortResponse) Descriptor() ([]byte, []int) {
	return file_sentiric_media_v1_media_proto_rawDescGZIP(), []int{1}
}

func (x *AllocatePortResponse) GetRtpPort() uint32 {
	if x != nil {
		return x.RtpPort
	}
	return 0
}

type ReleasePortRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RtpPort       uint32                 `protobuf:"varint,1,opt,name=rtp_port,json=rtpPort,proto3" json:"rtp_port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleasePortRequest) Reset() {
	*x = ReleasePortRequest{}
	mi := &file_sentiric_media_v1_media_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleasePortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleasePortRequest) ProtoMessage() {}

func (x *ReleasePortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_media_v1_media_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleasePortRequest.ProtoReflect.Descriptor instead.
func (*ReleasePortRequest) Descriptor() ([]byte, []int) {
	return file_sentiric_media_v1_media_proto_rawDescGZIP(), []int{2}
}

func (x *ReleasePortRequest) GetRtpPort() uint32 {
	if x != nil {
		return x.RtpPort
	}
	return 0
}

type ReleasePortResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleasePortResponse) Reset() {
	*x = ReleasePortResponse{}
	mi := &file_sentiric_media_v1_media_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleasePortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleasePortResponse) ProtoMessage() {}

func (x *ReleasePortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sentiric_media_v1_media_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleasePortResponse.ProtoReflect.Descriptor instead.
func (*ReleasePortResponse) Descriptor() ([]byte, []int) {
	return file_sentiric_media_v1_media_proto_rawDescGZIP(), []int{3}
}

func (x *ReleasePortResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_sentiric_media_v1_media_proto protoreflect.FileDescriptor

const file_sentiric_media_v1_media_proto_rawDesc = "" +
	"\n" +
	"\x1dsentiric/media/v1/media.proto\x12\x11sentiric.media.v1\".\n" +
	"\x13AllocatePortRequest\x12\x17\n" +
	"\acall_id\x18\x01 \x01(\tR\x06callId\"1\n" +
	"\x14AllocatePortResponse\x12\x19\n" +
	"\brtp_port\x18\x01 \x01(\rR\artpPort\"/\n" +
	"\x12ReleasePortRequest\x12\x19\n" +
	"\brtp_port\x18\x01 \x01(\rR\artpPort\"/\n" +
	"\x13ReleasePortResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\xcd\x01\n" +
	"\fMediaService\x12_\n" +
	"\fAllocatePort\x12&.sentiric.media.v1.AllocatePortRequest\x1a'.sentiric.media.v1.AllocatePortResponse\x12\\\n" +
	"\vReleasePort\x12%.sentiric.media.v1.ReleasePortRequest\x1a&.sentiric.media.v1.ReleasePortResponseBGZEgithub.com/sentiric/sentiric-core-interfaces/gen/go/sentiric/media/v1b\x06proto3"

var (
	file_sentiric_media_v1_media_proto_rawDescOnce sync.Once
	file_sentiric_media_v1_media_proto_rawDescData []byte
)

func file_sentiric_media_v1_media_proto_rawDescGZIP() []byte {
	file_sentiric_media_v1_media_proto_rawDescOnce.Do(func() {
		file_sentiric_media_v1_media_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sentiric_media_v1_media_proto_rawDesc), len(file_sentiric_media_v1_media_proto_rawDesc)))
	})
	return file_sentiric_media_v1_media_proto_rawDescData
}

var file_sentiric_media_v1_media_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_sentiric_media_v1_media_proto_goTypes = []any{
	(*AllocatePortRequest)(nil),  // 0: sentiric.media.v1.AllocatePortRequest
	(*AllocatePortResponse)(nil), // 1: sentiric.media.v1.AllocatePortResponse
	(*ReleasePortRequest)(nil),   // 2: sentiric.media.v1.ReleasePortRequest
	(*ReleasePortResponse)(nil),  // 3: sentiric.media.v1.ReleasePortResponse
}
var file_sentiric_media_v1_media_proto_depIdxs = []int32{
	0, // 0: sentiric.media.v1.MediaService.AllocatePort:input_type -> sentiric.media.v1.AllocatePortRequest
	2, // 1: sentiric.media.v1.MediaService.ReleasePort:input_type -> sentiric.media.v1.ReleasePortRequest
	1, // 2: sentiric.media.v1.MediaService.AllocatePort:output_type -> sentiric.media.v1.AllocatePortResponse
	3, // 3: sentiric.media.v1.MediaService.ReleasePort:output_type -> sentiric.media.v1.ReleasePortResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sentiric_media_v1_media_proto_init() }
func file_sentiric_media_v1_media_proto_init() {
	if File_sentiric_media_v1_media_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sentiric_media_v1_media_proto_rawDesc), len(file_sentiric_media_v1_media_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sentiric_media_v1_media_proto_goTypes,
		DependencyIndexes: file_sentiric_media_v1_media_proto_depIdxs,
		MessageInfos:      file_sentiric_media_v1_media_proto_msgTypes,
	}.Build()
	File_sentiric_media_v1_media_proto = out.File
	file_sentiric_media_v1_media_proto_goTypes = nil
	file_sentiric_media_v1_media_proto_depIdxs = nil
}
