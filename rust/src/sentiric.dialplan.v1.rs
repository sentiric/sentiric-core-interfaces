// @generated
// This file is @generated by prost-build.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetDialplanRequest {
    /// Aranan numaranın SIP URI'si
    #[prost(string, tag="1")]
    pub to_uri: ::prost::alloc::string::String,
    /// Arayanın SIP URI'si (kaynağa göre yönlendirme için)
    #[prost(string, tag="2")]
    pub from_uri: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetDialplanResponse {
    /// Yönlendirme planı, bir veya daha fazla eylemden oluşabilir.
    #[prost(message, repeated, tag="1")]
    pub actions: ::prost::alloc::vec::Vec<get_dialplan_response::Action>,
}
/// Nested message and enum types in `GetDialplanResponse`.
pub mod get_dialplan_response {
    /// Action, çağrı için atılacak bir sonraki adımı tanımlar.
    #[derive(Clone, PartialEq, ::prost::Message)]
    pub struct Action {
        #[prost(enumeration="action::Type", tag="1")]
        pub r#type: i32,
        /// Eylem parametreleri, örn: {"announcement_id": "welcome_message"}
        #[prost(map="string, string", tag="2")]
        pub parameters: ::std::collections::HashMap<::prost::alloc::string::String, ::prost::alloc::string::String>,
    }
    /// Nested message and enum types in `Action`.
    pub mod action {
        #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
        #[repr(i32)]
        pub enum Type {
            Unspecified = 0,
            /// Çağrıyı agent-service'e yönlendir (RabbitMQ olayı ile)
            RouteToAgent = 1,
            /// Bir anons çal
            PlayAnnouncement = 2,
            /// Çağrıyı reddet
            Reject = 3,
        }
        impl Type {
            /// String value of the enum field names used in the ProtoBuf definition.
            ///
            /// The values are not transformed in any way and thus are considered stable
            /// (if the ProtoBuf definition does not change) and safe for programmatic use.
            pub fn as_str_name(&self) -> &'static str {
                match self {
                    Self::Unspecified => "TYPE_UNSPECIFIED",
                    Self::RouteToAgent => "ROUTE_TO_AGENT",
                    Self::PlayAnnouncement => "PLAY_ANNOUNCEMENT",
                    Self::Reject => "REJECT",
                }
            }
            /// Creates an enum from field names used in the ProtoBuf definition.
            pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
                match value {
                    "TYPE_UNSPECIFIED" => Some(Self::Unspecified),
                    "ROUTE_TO_AGENT" => Some(Self::RouteToAgent),
                    "PLAY_ANNOUNCEMENT" => Some(Self::PlayAnnouncement),
                    "REJECT" => Some(Self::Reject),
                    _ => None,
                }
            }
        }
    }
}
// @@protoc_insertion_point(module)
