// source: sentiric/dialplan/v1/dialplan.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.sentiric.dialplan.v1.GetDialplanRequest', null, global);
goog.exportSymbol('proto.sentiric.dialplan.v1.GetDialplanResponse', null, global);
goog.exportSymbol('proto.sentiric.dialplan.v1.GetDialplanResponse.Action', null, global);
goog.exportSymbol('proto.sentiric.dialplan.v1.GetDialplanResponse.Action.Type', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sentiric.dialplan.v1.GetDialplanRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sentiric.dialplan.v1.GetDialplanRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sentiric.dialplan.v1.GetDialplanRequest.displayName = 'proto.sentiric.dialplan.v1.GetDialplanRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sentiric.dialplan.v1.GetDialplanResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sentiric.dialplan.v1.GetDialplanResponse.repeatedFields_, null);
};
goog.inherits(proto.sentiric.dialplan.v1.GetDialplanResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sentiric.dialplan.v1.GetDialplanResponse.displayName = 'proto.sentiric.dialplan.v1.GetDialplanResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sentiric.dialplan.v1.GetDialplanResponse.Action = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sentiric.dialplan.v1.GetDialplanResponse.Action, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sentiric.dialplan.v1.GetDialplanResponse.Action.displayName = 'proto.sentiric.dialplan.v1.GetDialplanResponse.Action';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sentiric.dialplan.v1.GetDialplanRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sentiric.dialplan.v1.GetDialplanRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sentiric.dialplan.v1.GetDialplanRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sentiric.dialplan.v1.GetDialplanRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    toUri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fromUri: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sentiric.dialplan.v1.GetDialplanRequest}
 */
proto.sentiric.dialplan.v1.GetDialplanRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sentiric.dialplan.v1.GetDialplanRequest;
  return proto.sentiric.dialplan.v1.GetDialplanRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sentiric.dialplan.v1.GetDialplanRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sentiric.dialplan.v1.GetDialplanRequest}
 */
proto.sentiric.dialplan.v1.GetDialplanRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToUri(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromUri(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sentiric.dialplan.v1.GetDialplanRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sentiric.dialplan.v1.GetDialplanRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sentiric.dialplan.v1.GetDialplanRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sentiric.dialplan.v1.GetDialplanRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToUri();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFromUri();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string to_uri = 1;
 * @return {string}
 */
proto.sentiric.dialplan.v1.GetDialplanRequest.prototype.getToUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sentiric.dialplan.v1.GetDialplanRequest} returns this
 */
proto.sentiric.dialplan.v1.GetDialplanRequest.prototype.setToUri = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string from_uri = 2;
 * @return {string}
 */
proto.sentiric.dialplan.v1.GetDialplanRequest.prototype.getFromUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sentiric.dialplan.v1.GetDialplanRequest} returns this
 */
proto.sentiric.dialplan.v1.GetDialplanRequest.prototype.setFromUri = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sentiric.dialplan.v1.GetDialplanResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sentiric.dialplan.v1.GetDialplanResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sentiric.dialplan.v1.GetDialplanResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sentiric.dialplan.v1.GetDialplanResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sentiric.dialplan.v1.GetDialplanResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionsList: jspb.Message.toObjectList(msg.getActionsList(),
    proto.sentiric.dialplan.v1.GetDialplanResponse.Action.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sentiric.dialplan.v1.GetDialplanResponse}
 */
proto.sentiric.dialplan.v1.GetDialplanResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sentiric.dialplan.v1.GetDialplanResponse;
  return proto.sentiric.dialplan.v1.GetDialplanResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sentiric.dialplan.v1.GetDialplanResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sentiric.dialplan.v1.GetDialplanResponse}
 */
proto.sentiric.dialplan.v1.GetDialplanResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sentiric.dialplan.v1.GetDialplanResponse.Action;
      reader.readMessage(value,proto.sentiric.dialplan.v1.GetDialplanResponse.Action.deserializeBinaryFromReader);
      msg.addActions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sentiric.dialplan.v1.GetDialplanResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sentiric.dialplan.v1.GetDialplanResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sentiric.dialplan.v1.GetDialplanResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sentiric.dialplan.v1.GetDialplanResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sentiric.dialplan.v1.GetDialplanResponse.Action.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sentiric.dialplan.v1.GetDialplanResponse.Action.prototype.toObject = function(opt_includeInstance) {
  return proto.sentiric.dialplan.v1.GetDialplanResponse.Action.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sentiric.dialplan.v1.GetDialplanResponse.Action} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sentiric.dialplan.v1.GetDialplanResponse.Action.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    parametersMap: (f = msg.getParametersMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sentiric.dialplan.v1.GetDialplanResponse.Action}
 */
proto.sentiric.dialplan.v1.GetDialplanResponse.Action.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sentiric.dialplan.v1.GetDialplanResponse.Action;
  return proto.sentiric.dialplan.v1.GetDialplanResponse.Action.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sentiric.dialplan.v1.GetDialplanResponse.Action} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sentiric.dialplan.v1.GetDialplanResponse.Action}
 */
proto.sentiric.dialplan.v1.GetDialplanResponse.Action.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sentiric.dialplan.v1.GetDialplanResponse.Action.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = msg.getParametersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sentiric.dialplan.v1.GetDialplanResponse.Action.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sentiric.dialplan.v1.GetDialplanResponse.Action.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sentiric.dialplan.v1.GetDialplanResponse.Action} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sentiric.dialplan.v1.GetDialplanResponse.Action.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getParametersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * @enum {number}
 */
proto.sentiric.dialplan.v1.GetDialplanResponse.Action.Type = {
  TYPE_UNSPECIFIED: 0,
  ROUTE_TO_AGENT: 1,
  PLAY_ANNOUNCEMENT: 2,
  REJECT: 3
};

/**
 * optional Type type = 1;
 * @return {!proto.sentiric.dialplan.v1.GetDialplanResponse.Action.Type}
 */
proto.sentiric.dialplan.v1.GetDialplanResponse.Action.prototype.getType = function() {
  return /** @type {!proto.sentiric.dialplan.v1.GetDialplanResponse.Action.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sentiric.dialplan.v1.GetDialplanResponse.Action.Type} value
 * @return {!proto.sentiric.dialplan.v1.GetDialplanResponse.Action} returns this
 */
proto.sentiric.dialplan.v1.GetDialplanResponse.Action.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * map<string, string> parameters = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.sentiric.dialplan.v1.GetDialplanResponse.Action.prototype.getParametersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.sentiric.dialplan.v1.GetDialplanResponse.Action} returns this
 */
proto.sentiric.dialplan.v1.GetDialplanResponse.Action.prototype.clearParametersMap = function() {
  this.getParametersMap().clear();
  return this;};


/**
 * repeated Action actions = 1;
 * @return {!Array<!proto.sentiric.dialplan.v1.GetDialplanResponse.Action>}
 */
proto.sentiric.dialplan.v1.GetDialplanResponse.prototype.getActionsList = function() {
  return /** @type{!Array<!proto.sentiric.dialplan.v1.GetDialplanResponse.Action>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sentiric.dialplan.v1.GetDialplanResponse.Action, 1));
};


/**
 * @param {!Array<!proto.sentiric.dialplan.v1.GetDialplanResponse.Action>} value
 * @return {!proto.sentiric.dialplan.v1.GetDialplanResponse} returns this
*/
proto.sentiric.dialplan.v1.GetDialplanResponse.prototype.setActionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sentiric.dialplan.v1.GetDialplanResponse.Action=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sentiric.dialplan.v1.GetDialplanResponse.Action}
 */
proto.sentiric.dialplan.v1.GetDialplanResponse.prototype.addActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sentiric.dialplan.v1.GetDialplanResponse.Action, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sentiric.dialplan.v1.GetDialplanResponse} returns this
 */
proto.sentiric.dialplan.v1.GetDialplanResponse.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};


goog.object.extend(exports, proto.sentiric.dialplan.v1);
